## whether to register and execute, not use Default config.
#wings.tiny.task.define[default].enabled=true

## whether to auto register and start, not use Default config.
#wings.tiny.task.define[default].autorun=true

## version number, higher version config overrides lower one, not use Default config.
#wings.tiny.task.define[default].version=0

## Beans annotated by TinyTasker, formatted as Class#method,
## automatically recognized by default, not use Default config.
#wings.tiny.task.define[default].tasker-bean=

## Parameters of the task, object array in json format,
## default null or no parameters, not use Default config.
#wings.tiny.task.define[default].tasker-para=

## Task name, used for notice and log, better readability,
## default is `[shortClassName#method]`, not use Default config.
#wings.tiny.task.define[default].tasker-name=

## Whether it is a light task, fast execution, completed in seconds, not use Default config.
#wings.tiny.task.define[default].task-fast=true

## The app it belongs to, comma separated,
## use Default config if null or empty.
wings.tiny.task.define[default].tasker-apps=${spring.application.name}

## RunMode(product|test|develop|local), Comma separated, ignore case, default all,
## use Default config if null or empty.
wings.tiny.task.define[default].tasker-runs=

## Notice bean, SmallNotice type, fullpath of Class, no notice by default.
## use Default config if null or empty.
wings.tiny.task.define[default].notice-bean=pro.fessional.wings.slardar.notice.DingTalkNotice

## Timing of notice, exec|fail|done|feed, comma separated ignoring case, default fail.
## use Default config if null or empty.
## * timing is roughly expressed: exec;try{run...;done}catch{fail}
## * exec - init task; done - success; fail - failed; feed - non-empty return.
wings.tiny.task.define[default].notice-when=fail

## The config name of the notice bean, automatic by default. use Default config if empty.
wings.tiny.task.define[default].notice-conf=

## timezone of scheduling , default system timezone, use Default config if null or empty.
wings.tiny.task.define[default].timing-zone=

## scheduling expression type, affects how timingCron is parsed,
## defaults to spring cron format, use Default config if null or empty.
wings.tiny.task.define[default].timing-type=cron

## Scheduling expression content, highest priority, affected by timingType,
## default spring cron format (second minute hour day month week), not use Default config.
#wings.tiny.task.define[default].timing-cron=

## Fixed idle interval (seconds), lower priority than timingCron,
## equal to fixedDelay, end to start, 0 means disable, not use Default config.
#wings.tiny.task.define[default].timing-idle=0

## Fixed frequency interval (seconds), lower priority than timingIdle,
## equal to fixedRate, start to start, 0 means disable, not use Default config.
#wings.tiny.task.define[default].timing-rate=0

## Within how many seconds of a misfire, execution is required,
## 0 means no execution. not use Default config.
#wings.tiny.task.define[default].timing-miss=0

## the interval seconds of heartbeat and health-check, not use Default config.
## it is considered as an exception if the last_exec is more than 2 heartbeats away from now.
## `<0` - disable check
## `0` - auto calculate, when cron, calc next_exec from last_exec, others, max rate and idle
## `>0` - fixed positive seconds
#wings.tiny.task.define[default].timing-beat=0

## schedule start datetime at timingZone, in yyyy-MM-dd HH:mm:ss format,
## 0 means disable, not use Default config.
#wings.tiny.task.define[default].during-from=

## schedule stop datetime at timingZone, in yyyy-MM-dd HH:mm:ss format,
## 0 means disable, not use Default config.
#wings.tiny.task.define[default].during-stop=

## stop schedule after how many total executions, not use Default config.
#wings.tiny.task.define[default].during-exec=0

## stop schedule after how many consecutive failures, not use Default config.
#wings.tiny.task.define[default].during-fail=0

## stop schedule after how many successful executions, not use Default config.
#wings.tiny.task.define[default].during-done=0

## recount each time the app is started, and stop schedule after how many
## successful executions, disable by default, not use Default config.
#wings.tiny.task.define[default].during-boot=0

## how many days to save the execution results, default 60 days,
## 0 means not save, use Default configuration if null.
wings.tiny.task.define[default].result-keep=60

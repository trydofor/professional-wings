<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.8</version> <!-- https://github.com/spring-projects/spring-boot/releases -->
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>pro.fessional</groupId>
    <artifactId>wings-boot</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <name>WingsBoot::</name>
    <description>万物生长靠日 ☀️ Growing Need the F^king Sun</description>
    <url>https://wings.fessional.pro</url>

    <properties>
        <!-- (#.#).(##)(#) (SPRING-MINOR).(MINOR)(PATCH) https://maven.apache.org/maven-ci-friendly.html -->
        <revision>3.2.131-SNAPSHOT</revision>
        <!-- https://docs.spring.io/spring-boot/docs/current/reference/html/dependency-versions.html -->
        <spring-boot.version>3.2.8</spring-boot.version>
        <!--  -->
        <wings.version>${revision}</wings.version>
        <!--suppress UnresolvedMavenProperty fulfill by directory-maven-plugin -->
        <wings.rootdir>${highest-basedir}</wings.rootdir>
        <!-- project -->
        <java.version>21</java.version>
        <!-- <kotlin.version>1.9.21</kotlin.version> -->
        <!-- mvn boot -->
        <spring-boot.repackage.skip>true</spring-boot.repackage.skip>
        <spring-boot.repackage.executable>false</spring-boot.repackage.executable>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>
        <!-- common quality checker: jetbrains/findbugs-jsr305(guava)/errorprone(guava) -->
        <annotations.version>24.1.0</annotations.version> <!-- https://github.com/JetBrains/java-annotations/releases -->
        <!-- common utils-->
        <mapstruct.version>1.5.5.Final</mapstruct.version> <!-- https://github.com/mapstruct/mapstruct/releases -->
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version> <!-- https://mapstruct.org/documentation/1.6/reference/html/#_set_up -->
        <guava.version>33.2.1-jre</guava.version> <!-- https://github.com/google/guava/releases/ -->
        <commons-io.version>2.16.1</commons-io.version> <!-- https://commons.apache.org/proper/commons-io/changes-report.html -->
        <commons-collections4.version>4.4</commons-collections4.version> <!-- https://commons.apache.org/proper/commons-collections/ -->
        <commons-text.version>1.12.0</commons-text.version> <!-- https://commons.apache.org/proper/commons-text/ -->
        <joda-convert.version>2.2.3</joda-convert.version> <!-- https://github.com/JodaOrg/joda-convert/releases -->
        <!-- wings project -->
        <mirana.version>2.7.4-SNAPSHOT</mirana.version> <!-- https://github.com/trydofor/pro.fessional.mirana -->
        <meepo.version>1.5.1</meepo.version> <!-- https://github.com/trydofor/pro.fessional.meepo -->
        <kaptcha.version>2.3.3</kaptcha.version> <!-- https://github.com/trydofor/kaptcha -->
        <fastjson2.version>2.0.52</fastjson2.version> <!-- https://github.com/alibaba/fastjson2/releases -->
        <fastjson.version>${fastjson2.version}</fastjson.version> <!-- https://github.com/alibaba/fastjson/releases -->
        <kryo.version>5.6.0</kryo.version> <!-- https://github.com/EsotericSoftware/kryo/releases -->
        <transmittable.version>2.14.5</transmittable.version> <!-- https://github.com/alibaba/transmittable-thread-local/releases -->
        <bouncycastle.version>1.78.1</bouncycastle.version> <!-- https://www.bouncycastle.org/download/bouncy-castle-java/#release-notes -->
        <justauth.version>1.16.6</justauth.version> <!-- https://github.com/justauth/JustAuth/releases -->
        <!-- sharding jdbc -->
        <shardingsphere.version>5.5.0</shardingsphere.version> <!-- https://github.com/apache/shardingsphere/releases -->
        <!-- servicecomb -->
        <servicecomb.version>3.2.4</servicecomb.version> <!-- https://github.com/apache/servicecomb-java-chassis/releases -->
        <!-- others -->
        <springdoc.version>2.5.0</springdoc.version> <!-- https://github.com/springdoc/springdoc-openapi/releases -->
        <boot-admin.version>3.2.3</boot-admin.version> <!-- https://github.com/codecentric/spring-boot-admin/releases -->
        <sentry.version>7.12.1</sentry.version> <!-- https://github.com/getsentry/sentry-java/releases buildSrc/src/main/java/Config.kt -->
        <retrofit.version>2.11.0</retrofit.version> <!-- https://github.com/square/retrofit/releases -->
        <allure.version>2.29.0</allure.version> <!-- https://github.com/allure-framework/allure-java/releases -->
        <druid.version>1.2.23</druid.version> <!-- https://github.com/alibaba/druid/releases -->
        <jmh.version>1.37</jmh.version> <!-- https://github.com/openjdk/jmh/tags -->
        <!-- mvn-build-plugin -->
        <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version> <!-- https://github.com/mojohaus/flatten-maven-plugin/releases -->
        <directory-maven-plugin.version>1.0</directory-maven-plugin.version> <!-- https://github.com/jdcasey/directory-maven-plugin -->
        <maven-gpg-plugin.version>3.2.4</maven-gpg-plugin.version> <!-- https://github.com/apache/maven-gpg-plugin/releases -->
        <nexus-staging-plugin.version>1.7.0</nexus-staging-plugin.version> <!-- https://github.com/sonatype/nexus-maven-plugins/tree/main/staging/maven-plugin -->
        <coveralls-maven-plugin.version>4.3.0</coveralls-maven-plugin.version> <!-- https://github.com/hazendaz/coveralls-maven-plugin -->
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version> <!-- https://www.jacoco.org/jacoco/trunk/doc/maven.html -->
        <dokka-maven-plugin.version>1.9.20</dokka-maven-plugin.version> <!-- https://kotlinlang.org/docs/dokka-maven.html#general-configuration -->
        <lombok-maven-plugin.version>1.18.20.0</lombok-maven-plugin.version> <!-- https://github.com/awhitford/lombok.maven -->
        <exec-maven-plugin.version>3.3.0</exec-maven-plugin.version> <!-- https://github.com/mojohaus/exec-maven-plugin/releases -->
        <jib-maven-plugin.version>3.4.3</jib-maven-plugin.version> <!-- https://github.com/GoogleContainerTools/jib/releases -->
        <jib-layer-filter.version>0.3.0</jib-layer-filter.version> <!-- https://github.com/GoogleContainerTools/jib-extensions/blob/master/first-party/jib-layer-filter-extension-maven/README.md -->
        <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version> <!-- https://maven.apache.org/enforcer/maven-enforcer-plugin/ -->
        <versions-maven-plugin.version>2.17.1</versions-maven-plugin.version> <!-- https://www.mojohaus.org/versions/versions-maven-plugin -->
        <!-- java, kotlin sources  -->
        <source.srcMainJava>${project.basedir}/src/main/java</source.srcMainJava>
        <source.srcMainJavaGen>${project.basedir}/src/main/java-gen</source.srcMainJavaGen>
        <source.srcMainKotlin>${project.basedir}/src/main/kotlin</source.srcMainKotlin>
        <source.srcMainKotlinGen>${project.basedir}/src/main/kotlin-gen</source.srcMainKotlinGen>
        <source.srcTestJava>${project.basedir}/src/test/java</source.srcTestJava>
        <source.srcTestKotlin>${project.basedir}/src/test/kotlin</source.srcTestKotlin>
        <!-- delombok: javadoc cannot find symbol  -->
        <source.srcMainMixed>${project.build.directory}/main-mixed</source.srcMainMixed>
        <source.srcMainDelombok>${project.build.directory}/main-delombok</source.srcMainDelombok>
        <!-- test,doc,deploy -->
        <argLine>-Xmx2g @{javaopenArgLine} --add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED --add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</argLine> <!-- surefire and jacoco -->
        <javaopenArgLine><!-- trim indent
            -->--add-modules=java.se <!-- Hazelcast
            -->--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED <!-- Hazelcast
            -->--add-opens=java.base/java.io=ALL-UNNAMED <!-- FastJson
            -->--add-opens=java.base/java.lang.invoke=ALL-UNNAMED <!-- FastJson2
            -->--add-opens=java.base/java.lang=ALL-UNNAMED <!-- Hazelcast
            -->--add-opens=java.base/java.net=ALL-UNNAMED <!-- Gson
            -->--add-opens=java.base/java.nio=ALL-UNNAMED <!-- Hazelcast
            -->--add-opens=java.base/java.util=ALL-UNNAMED <!-- Boot Collections$EmptySet
            -->--add-opens=java.base/jdk.internal.ref=ALL-UNNAMED <!-- Hazelcast
            -->--add-opens=java.base/sun.nio.ch=ALL-UNNAMED <!-- Hazelcast
            -->--add-opens=java.base/sun.security.x509=ALL-UNNAMED <!-- Boot
            -->--add-opens=java.management/sun.management=ALL-UNNAMED <!-- Hazelcast
            -->--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED <!-- Hazelcast
            -->--add-opens=jdk.unsupported/sun.misc=ALL-UNNAMED <!-- Boot
            --></javaopenArgLine>
        <!-- docker -->
        <docker.from.prefix><!-- docker:// --></docker.from.prefix>
        <docker.to.prefix><!-- registry://docker.io/fessional/ --></docker.to.prefix>
        <docker.image.app-root>/app</docker.image.app-root>
        <docker.image.app-conf>${docker.image.app-root}/conf</docker.image.app-conf>
        <docker.image.app-data>${docker.image.app-root}/data</docker.image.app-data>
        <docker.image.app-logs>${docker.image.app-root}/logs</docker.image.app-logs>
        <docker.image.app-port>8080</docker.image.app-port>
        <docker.image.app-xms>1G</docker.image.app-xms>
        <docker.image.app-xmx>3G</docker.image.app-xmx>
        <docker.image.app-user>nobody</docker.image.app-user>
    </properties>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>trydofor</name>
            <email>trydofor@gmail.com</email>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/trydofor/pro.fessional.wings</url>
    </scm>

    <modules>
        <module>wings</module>
        <module>radiant</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- pro.fessional -->
            <dependency>
                <groupId>pro.fessional</groupId>
                <artifactId>meepo</artifactId>
                <version>${meepo.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional</groupId>
                <artifactId>mirana</artifactId>
                <version>${mirana.version}</version>
            </dependency>
            <!-- pro.fessional.wings -->
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>silencer</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>silencer-curse</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>silencer-jaxb</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>faceless</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>faceless-flywave</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>faceless-jooq</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>faceless-codegen</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>faceless-shard</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>slardar</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>slardar-hazel-caching</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>slardar-hazel-session</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>slardar-webmvc</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>slardar-sprint</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>warlock</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>warlock-bond</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>warlock-codegen</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>warlock-shadow</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>batrider</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>batrider-zero</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>testing-silencer</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>testing-docker</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>testing-faceless</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>testing-slardar</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>testing-warlock</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>testing-batrider</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <!-- pro.fessional.wings:radiant -->
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>tiny-task</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>tiny-mail</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>tiny-grow</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <!-- kotlin -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <!-- springboot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
                <!-- undertow has a better benchmark -->
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- sharding sphere -->
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>shardingsphere-jdbc</artifactId>
                <version>${shardingsphere.version}</version>
                <!-- https://github.com/apache/shardingsphere/pull/31143 -->
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.shardingsphere</groupId>
                        <artifactId>shardingsphere-test-util</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- session cache -->
            <!-- spring-session-bom
            <dependency>
                <groupId>org.springframework.session</groupId>
                <artifactId>spring-session-hazelcast</artifactId>
            </dependency>
            -->
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-spring</artifactId>
                <version>${hazelcast.version}</version>
            </dependency>
            <!-- servicecomb -->
            <dependency>
                <groupId>org.apache.servicecomb</groupId>
                <artifactId>java-chassis-spring-boot-starter-servlet</artifactId>
                <version>${servicecomb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.servicecomb</groupId>
                <artifactId>swagger-invocation-validator</artifactId>
                <version>${servicecomb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.servicecomb</groupId>
                <artifactId>handler-publickey-auth</artifactId>
                <version>${servicecomb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.servicecomb</groupId>
                <artifactId>handler-loadbalance</artifactId>
                <version>${servicecomb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.servicecomb</groupId>
                <artifactId>registry-zero-config</artifactId>
                <version>${servicecomb.version}</version>
            </dependency>
            <!-- utils -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>
            <dependency>
                <groupId>org.joda</groupId>
                <artifactId>joda-convert</artifactId>
                <version>${joda-convert.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson2.version}</version>
            </dependency>
            <dependency>
                <!-- DENIED by wings, define safe version numbers for indirectly 3rd lib -->
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>${kryo.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId>
                <version>${transmittable.version}</version>
            </dependency>
            <dependency>
                <groupId>me.zhyd.oauth</groupId>
                <artifactId>JustAuth</artifactId>
                <version>${justauth.version}</version>
            </dependency>
            <!-- Argon2PasswordEncoder -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <!-- http rest -->
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>retrofit</artifactId>
                <version>${retrofit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>converter-jackson</artifactId>
                <version>${retrofit.version}</version>
            </dependency>
            <!-- ops -->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>io.sentry</groupId>
                <artifactId>sentry-spring-boot-starter-jakarta</artifactId>
                <version>${sentry.version}</version>
            </dependency>
            <dependency>
                <groupId>io.sentry</groupId>
                <artifactId>sentry-logback</artifactId>
                <version>${sentry.version}</version>
            </dependency>
            <!-- dev -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>${annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-logging</artifactId>
                <version>${spring-boot.version}</version>
                <!-- NOT used, explicitly removed for security reasons to prevent misuse -->
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-to-slf4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-java-commons</artifactId>
                <version>${allure.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-core</artifactId>
                <version>${jmh.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-generator-annprocess</artifactId>
                <version>${jmh.version}</version>
            </dependency>
            <!-- do NOT import any BOM -->
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.commonjava.maven.plugins</groupId>
                <artifactId>directory-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <environmentVariables>
                            <WINGS_ROOTDIR>${wings.rootdir}</WINGS_ROOTDIR>
                        </environmentVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <!-- avoid /build/resources/resource/filtering=true -->
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>so</nonFilteredFileExtension>
                            <nonFilteredFileExtension>dll</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>zip</nonFilteredFileExtension>
                            <nonFilteredFileExtension>jar</nonFilteredFileExtension>
                            <nonFilteredFileExtension>icon</nonFilteredFileExtension>
                            <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>gif</nonFilteredFileExtension>
                            <nonFilteredFileExtension>png</nonFilteredFileExtension>
                            <nonFilteredFileExtension>wav</nonFilteredFileExtension>
                            <nonFilteredFileExtension>mp3</nonFilteredFileExtension>
                            <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>xls</nonFilteredFileExtension>
                            <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
                            <nonFilteredFileExtension>doc</nonFilteredFileExtension>
                            <nonFilteredFileExtension>docx</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                    <executions>
                        <execution>
                            <id>copy-main-mixed</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${source.srcMainMixed}</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>${source.srcMainJava}</directory>
                                    </resource>
                                    <resource>
                                        <directory>${source.srcMainJavaGen}</directory>
                                    </resource>
                                    <resource>
                                        <directory>${source.srcMainKotlin}</directory>
                                    </resource>
                                    <resource>
                                        <directory>${source.srcMainKotlinGen}</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <parameters>true</parameters>
                        <annotationProcessorPaths>
                            <!--  find annotationProcessors in the following paths -->
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>${lombok-mapstruct-binding.version}</version>
                            </path>
                            <path>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-configuration-processor</artifactId>
                                <version>${spring-boot.version}</version>
                            </path>
                            <path>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-autoconfigure-processor</artifactId>
                                <version>${spring-boot.version}</version>
                            </path>
                            <path>
                                <groupId>org.springframework</groupId>
                                <artifactId>spring-context-indexer</artifactId>
                                <version>${spring-framework.version}</version>
                            </path>
                            <path>
                                <groupId>org.openjdk.jmh</groupId>
                                <artifactId>jmh-generator-annprocess</artifactId>
                                <version>${jmh.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <id>build-info</id>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>repackage</id>
                            <configuration>
                                <skip>${spring-boot.repackage.skip}</skip>
                                <executable>${spring-boot.repackage.executable}</executable>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!--  doc delombok getter for doc -->
                <plugin>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok-maven-plugin</artifactId>
                    <version>${lombok-maven-plugin.version}</version>
                    <configuration>
                        <addOutputDirectory>false</addOutputDirectory>
                        <sourceDirectory>${source.srcMainMixed}</sourceDirectory>
                        <outputDirectory>${source.srcMainDelombok}</outputDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>delombok</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>delombok</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.jetbrains.dokka</groupId>
                    <artifactId>dokka-maven-plugin</artifactId>
                    <version>${dokka-maven-plugin.version}</version>
                    <configuration>
                        <sourceDirectories>
                            <dir>${source.srcMainDelombok}</dir>
                        </sourceDirectories>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>javadocJar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--  coverage  -->
                <plugin>
                    <groupId>org.eluder.coveralls</groupId>
                    <artifactId>coveralls-maven-plugin</artifactId>
                    <version>${coveralls-maven-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>javax.xml.bind</groupId>
                            <artifactId>jaxb-api</artifactId>
                            <version>2.3.1</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--  deploy  -->
                <plugin>
                    <!-- https://maven.apache.org/plugins/maven-gpg-plugin/sign-mojo.html -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven-gpg-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                            <configuration>
                                <keyname>541B1728468267BFA83FE092CE8F6F63A835DB68</keyname>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>${nexus-staging-plugin.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <serverId>ossrh</serverId>
                        <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                        <autoReleaseAfterClose>true</autoReleaseAfterClose>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>add-sources</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${source.srcMainKotlin}</source>
                                    <source>${source.srcMainKotlinGen}</source>
                                    <source>${source.srcMainJava}</source>
                                    <source>${source.srcMainJavaGen}</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <!-- https://www.mojohaus.org/flatten-maven-plugin/flatten-mojo.html -->
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${flatten-maven-plugin.version}</version>
                    <configuration>
                        <updatePomFile>true</updatePomFile>
                        <flattenMode>resolveCiFriendliesOnly</flattenMode>
                        <flattenedPomFilename>.pom.xml</flattenedPomFilename>
                    </configuration>
                    <executions>
                        <execution>
                            <id>flatten</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>flatten.clean</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.commonjava.maven.plugins</groupId>
                    <artifactId>directory-maven-plugin</artifactId>
                    <version>${directory-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>project-basedir</id>
                            <goals>
                                <goal>highest-basedir</goal>
                            </goals>
                            <phase>initialize</phase>
                            <configuration>
                                <property>highest-basedir</property>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                </plugin>
                <!-- kotlin -->
                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                    <configuration>
                        <jvmTarget>${java.version}</jvmTarget>
                        <javaParameters>true</javaParameters>
                        <args>
                            <arg>-Xjsr305=strict</arg>
                        </args>
                        <compilerPlugins>
                            <plugin>spring</plugin>
                            <plugin>lombok</plugin>
                        </compilerPlugins>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-allopen</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-lombok</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- build info -->
                <plugin>
                    <groupId>io.github.git-commit-id</groupId>
                    <artifactId>git-commit-id-maven-plugin</artifactId>
                    <version>${git-commit-id-maven-plugin.version}</version>
                    <configuration>
                        <verbose>false</verbose>
                        <offline>true</offline>
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                        <includeOnlyProperties>
                            <includeOnlyProperty>git.branch</includeOnlyProperty>
                            <includeOnlyProperty>git.build.(host|time|version|user.name|number.*)</includeOnlyProperty>
                            <includeOnlyProperty>git.closest.*</includeOnlyProperty>
                            <includeOnlyProperty>git.commit.(time|user.name|id.abbrev|id.full|message.full)</includeOnlyProperty>
                            <includeOnlyProperty>git.dirty</includeOnlyProperty>
                            <includeOnlyProperty>git.local.*</includeOnlyProperty>
                            <includeOnlyProperty>git.tags</includeOnlyProperty>
                        </includeOnlyProperties>
                        <commitIdGenerationMode>full</commitIdGenerationMode>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-maven</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>[3.8,)</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib-maven-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.google.cloud.tools</groupId>
                            <artifactId>jib-layer-filter-extension-maven</artifactId>
                            <version>${jib-layer-filter.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>module-example</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>example</module>
            </modules>
        </profile>
        <profile>
            <id>repo-snapshot</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <repositories>
                <repository>
                    <id>oss-sonatype</id>
                    <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </repository>
            </repositories>
        </profile>
        <profile>
            <id>wings-kotlin-1test</id>
            <activation>
                <file>
                    <exists>src/test/kotlin</exists>
                </file>
            </activation>
            <properties>
                <wings-kotlin-scope>test</wings-kotlin-scope>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib-jdk8</artifactId>
                    <scope>${wings-kotlin-scope}</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!-- https://kotlinlang.org/docs/maven.html#compile-kotlin-and-java-sources -->
                    <plugin>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>test-compile</id>
                                <goals>
                                    <goal>test-compile</goal>
                                </goals>
                                <configuration>
                                    <sourceDirs>
                                        <sourceDir>${source.srcTestKotlin}</sourceDir>
                                        <sourceDir>${source.srcTestJava}</sourceDir>
                                    </sourceDirs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <executions>
                            <!-- Replacing default-testCompile as it is treated specially by maven -->
                            <execution>
                                <id>default-testCompile</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>java-test-compile</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>wings-kotlin-2main</id>
            <activation>
                <file>
                    <exists>src/main/kotlin</exists>
                </file>
            </activation>
            <properties>
                <wings-kotlin-scope>compile</wings-kotlin-scope>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib-jdk8</artifactId>
                    <scope>${wings-kotlin-scope}</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!-- https://kotlinlang.org/docs/maven.html#compile-kotlin-and-java-sources -->
                    <plugin>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>compile</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <configuration>
                                    <sourceDirs>
                                        <sourceDir>${source.srcMainKotlin}</sourceDir>
                                        <sourceDir>${source.srcMainKotlinGen}</sourceDir>
                                        <sourceDir>${source.srcMainJava}</sourceDir>
                                        <sourceDir>${source.srcMainJavaGen}</sourceDir>
                                    </sourceDirs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <executions>
                            <!-- Replacing default-compile as it is treated specially by maven -->
                            <execution>
                                <id>default-compile</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>java-compile</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- -DrepoToken=${{ secrets.COVERALLS_REPO_TOKEN }} -->
            <id>report-coverage</id>
            <properties>
                <maven.test.skip>false</maven.test.skip>
                <surefire.timeout>0</surefire.timeout> <!-- going to kill self fork JVM -->
                <surefire.exitTimeout>180</surefire.exitTimeout>
                <surefire.useSystemClassLoader>false</surefire.useSystemClassLoader> <!-- The forked VM terminated without properly saying goodbye -->
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <configuration>
                            <excludes>
                                <exclude>**/database/autogen/**</exclude>
                                <exclude>**/enums/autogen/**</exclude>
                                <exclude>**/security/autogen/**</exclude>
                                <exclude>**/*Const.*</exclude>
                                <exclude>**/*Const$*</exclude>
                                <exclude>**/*Attribute.*</exclude>
                                <exclude>**/*Attribute$*</exclude>
                                <exclude>**/*Enum.*</exclude>
                                <exclude>**/*Dummy.*</exclude>
                                <exclude>**/*Event.*</exclude>
                                <exclude>**/*Exception.*</exclude>
                                <exclude>**/*Template.*</exclude>
                                <exclude>**/*Database.*</exclude>
                                <exclude>**/*Assert.*</exclude>
                                <exclude>**/WhoAmI.*</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>deploy</id>
            <properties>
                <deployAtEnd>true</deployAtEnd>
                <maven.test.skip>true</maven.test.skip>
                <maven.install.skip>true</maven.install.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok-maven-plugin</artifactId>
                    </plugin>
                    <!--
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                    -->
                    <plugin>
                        <groupId>org.jetbrains.dokka</groupId>
                        <artifactId>dokka-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>deploy-oss</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
            <distributionManagement>
                <!-- https://central.sonatype.org/publish/publish-maven/ -->
                <snapshotRepository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
                <repository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>
        </profile>
        <profile>
            <id>deploy-alt</id>
            <properties>
                <!--suppress UnresolvedMavenProperty -->
                <altReleaseDeploymentRepository>altrh::${MVN_ALT_REPO}</altReleaseDeploymentRepository>
                <!--suppress UnresolvedMavenProperty -->
                <altSnapshotDeploymentRepository>altrh::${MVN_ALT_SNAP}</altSnapshotDeploymentRepository>
            </properties>
        </profile>
        <profile>
            <id>deploy-old</id>
            <properties>
                <deploy.old.todir>${project.build.directory}/old-build</deploy.old.todir>
                <deploy.old.files>${project.artifactId}-${project.version}*</deploy.old.files>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <!-- Backup before packaging -->
                            <execution>
                                <id>backup-artifacts</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <delete dir="${deploy.old.todir}" failonerror="false"/>
                                        <copy todir="${deploy.old.todir}" overwrite="true">
                                            <fileset dir="${project.build.directory}" includes="${deploy.old.files}"/>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                            <!-- Restore artifacts before deployment -->
                            <execution>
                                <id>restore-artifacts</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <copy todir="${project.build.directory}" overwrite="true">
                                            <fileset dir="${deploy.old.todir}" includes="${deploy.old.files}" erroronmissingdir="false"/>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- mvn -Pdocker jib:dockerBuild -->
                        <!-- https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin#system-properties -->
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <configuration>
                            <from>
                                <image>${docker.from.prefix}eclipse-temurin:${java.version}-jre</image>
                            </from>
                            <to>
                                <image>${docker.to.prefix}${project.artifactId}:${project.version}</image>
                            </to>
                            <container>
                                <format>OCI</format>
                                <volumes>
                                    <volume>${docker.image.app-conf}</volume>
                                    <volume>${docker.image.app-data}</volume>
                                    <volume>${docker.image.app-logs}</volume>
                                </volumes>
                                <environment>
                                    <JAVA_XMS>${docker.image.app-xms}</JAVA_XMS>
                                    <JAVA_XMX>${docker.image.app-xmx}</JAVA_XMX>
                                    <JAVA_OPTS><!-- trim indent
                                        -->${javaopenArgLine} <!--
                                        -->-server <!--
                                        -->-Djava.awt.headless=true -Dfile.encoding=UTF-8 <!--
                                        -->-XX:MetaspaceSize=256M -XX:AutoBoxCacheMax=20000 <!--
                                        -->-XX:MaxDirectMemorySize=1024M <!--
                                        -->-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${docker.image.app-logs}/application.hprof <!--
                                        -->-XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=8 -XX:ConcGCThreads=8 <!--
                                        -->-Xlog:gc*=info:file=${docker.image.app-logs}/application.gc:time,tid,tags:filecount=5,filesize=100m <!--
                                    --></JAVA_OPTS>
                                    <SPRING_APPLICATION_JSON>{<!-- trim indent
                                        -->"server.port":${docker.image.app-port}, <!--
                                        -->"spring.config.location":"optional:file:${docker.image.app-conf}", <!--
                                        -->"logging.file.name":"${docker.image.app-logs}/application.log" <!--
                                    -->}</SPRING_APPLICATION_JSON>
                                </environment>
                                <ports>
                                    <port>${docker.image.app-port}</port>
                                    <port>5701</port>
                                </ports>
                                <user>${docker.image.app-user}</user>
                                <appRoot>${docker.image.app-root}</appRoot>
                                <workingDirectory>${docker.image.app-root}</workingDirectory>
                                <entrypoint>
                                    <arg>/bin/bash</arg>
                                    <arg>-c</arg>
                                    <arg><!-- JDK_JAVA_OPTIONS / JAVA_TOOL_OPTIONS / _JAVA_OPTIONS
                                        -->exec java -Xms$JAVA_XMS -Xmx$JAVA_XMX $JAVA_OPTS <!--
                                        -->-cp @${docker.image.app-root}/jib-classpath-file <!--
                                        -->@${docker.image.app-root}/jib-main-class-file <!--
                                    --></arg>
                                </entrypoint>
                                <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                                <filesModificationTime>${maven.build.timestamp}</filesModificationTime>
                            </container>
                            <pluginExtensions>
                                <pluginExtension>
                                    <implementation>com.google.cloud.tools.jib.maven.extension.layerfilter.JibLayerFilterExtension</implementation>
                                    <configuration implementation="com.google.cloud.tools.jib.maven.extension.layerfilter.Configuration">
                                        <filters>
                                            <filter>
                                                <glob>**/spring-boot-devtools-*.jar</glob>
                                            </filter>
                                            <filter>
                                                <glob>**/spring-boot-docker-compose-*.jar</glob>
                                            </filter>
                                            <filter>
                                                <glob>**/spring-boot-starter-*.jar</glob>
                                            </filter>
                                            <filter>
                                                <glob>**/spring-boot-autoconfigure-processor-*.jar</glob>
                                            </filter>
                                            <filter>
                                                <glob>**/spring-boot-configuration-processor-*.jar</glob>
                                            </filter>
                                        </filters>
                                    </configuration>
                                </pluginExtension>
                            </pluginExtensions>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-dep</id>
            <properties>
                <jib.to.image>${docker.to.prefix}${project.artifactId}:${project.version}-DEP</jib.to.image>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <configuration>
                            <pluginExtensions>
                                <pluginExtension>
                                    <implementation>com.google.cloud.tools.jib.maven.extension.layerfilter.JibLayerFilterExtension</implementation>
                                    <configuration implementation="com.google.cloud.tools.jib.maven.extension.layerfilter.Configuration">
                                        <filters combine.children="append">
                                            <filter>
                                                <glob>**/*-SNAPSHOT.jar</glob>
                                            </filter>
                                            <filter>
                                                <glob>**/classes/**</glob>
                                            </filter>
                                            <filter>
                                                <glob>**/resources/**</glob>
                                            </filter>
                                            <filter>
                                                <glob>**/jib-*-file</glob>
                                            </filter>
                                        </filters>
                                    </configuration>
                                </pluginExtension>
                            </pluginExtensions>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-app</id>
            <properties>
                <jib.from.image>${docker.from.prefix}${project.artifactId}:${project.version}-DEP</jib.from.image>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <configuration>
                            <pluginExtensions>
                                <pluginExtension>
                                    <implementation>com.google.cloud.tools.jib.maven.extension.layerfilter.JibLayerFilterExtension</implementation>
                                    <configuration implementation="com.google.cloud.tools.jib.maven.extension.layerfilter.Configuration">
                                        <filters>
                                            <filter>
                                                <glob>**/*.jar</glob>
                                            </filter>
                                            <filter>
                                                <glob>**/*-SNAPSHOT.jar</glob>
                                                <toLayer>SNAPSHOT libraries</toLayer>
                                            </filter>
                                        </filters>
                                    </configuration>
                                </pluginExtension>
                            </pluginExtensions>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>image-paketo</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <image>
                                <name>${docker.to.prefix}${project.artifactId}:${project.version}</name>
                                <!-- app-root /workspace is hard code, can not change to /app -->
                                <createdDate>now</createdDate>
                                <env>
                                    <BP_JVM_VERSION>${java.version}</BP_JVM_VERSION>
                                    <BP_SPRING_CLOUD_BINDINGS_DISABLED>true</BP_SPRING_CLOUD_BINDINGS_DISABLED>
                                    <BPE_SPRING_APPLICATION_JSON>{<!-- trim indent
                                        -->"server.port":${docker.image.app-port}, <!--
                                        -->"spring.config.location":"optional:file:${docker.image.app-conf}", <!--
                                        -->"logging.file.name":"${docker.image.app-logs}/application.log" <!--
                                    -->}</BPE_SPRING_APPLICATION_JSON>
                                    <BPE_DELIM_JAVA_TOOL_OPTIONS xml:space="preserve"> </BPE_DELIM_JAVA_TOOL_OPTIONS>
                                    <BPE_APPEND_JAVA_TOOL_OPTIONS><!-- trim indent
                                        -->${javaopenArgLine} <!--
                                        -->-Djava.awt.headless=true -Dfile.encoding=UTF-8 <!--
                                        -->-XX:MetaspaceSize=256M -XX:AutoBoxCacheMax=20000 <!--
                                        -->-XX:MaxDirectMemorySize=1024M <!--
                                        -->-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${docker.image.app-logs}/application.hprof <!--
                                        -->-XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=8 -XX:ConcGCThreads=8 <!--
                                        -->-Xlog:gc*=info:file=${docker.image.app-logs}/application.gc:time,tid,tags:filecount=5,filesize=100m <!--
                                    --></BPE_APPEND_JAVA_TOOL_OPTIONS>
                                </env>
                            </image>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>

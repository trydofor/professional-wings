<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>pro.fessional.wings</groupId>
    <artifactId>ancient</artifactId>
    <version>${revision}.${changelist}</version>
    <packaging>pom</packaging>

    <name>wings-ancient</name>
    <description>万物生长靠日</description>

    <modules>
        <module>wings</module>
        <module>example</module>
        <module>radiant</module>
    </modules>

    <properties>
        <!-- https://github.com/spring-projects/spring-boot/releases -->
        <revision>2.6.6</revision>
        <!-- https://maven.apache.org/maven-ci-friendly.html -->
        <changelist>210-SNAPSHOT</changelist>
        <!-- https://docs.spring.io/spring-boot/docs/2.6.6/reference/html/dependency-versions.html -->
        <spring-boot.version>${revision}</spring-boot.version>
        <wings.version>${revision}.${changelist}</wings.version>
        <!-- project -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>
        <!-- mvn boot -->
        <maven.test.skip>false</maven.test.skip>
        <maven.deploy.skip>false</maven.deploy.skip>
        <maven.install.skip>false</maven.install.skip>
        <spring-boot.repackage.skip>false</spring-boot.repackage.skip>
        <spring-boot.repackage.executable>false</spring-boot.repackage.executable>
        <!-- common quality-->
        <errorprone.version>2.14.0</errorprone.version> <!-- https://github.com/google/error-prone/releases -->
        <annotations.version>23.0.0</annotations.version> <!-- https://github.com/JetBrains/java-annotations -->
        <!-- common utils-->
        <mapstruct.version>1.5.1.Final</mapstruct.version> <!-- https://github.com/mapstruct/mapstruct/releases -->
        <guava.version>31.1-jre</guava.version> <!-- https://github.com/google/guava/releases/ -->
        <commons-io.version>2.11.0</commons-io.version> <!-- https://commons.apache.org/proper/commons-io/ -->
        <!-- wings project -->
        <mirana.version>2.4.0-SNAPSHOT</mirana.version> <!-- https://github.com/trydofor/pro.fessional.mirana -->
        <meepo.version>1.4.1-SNAPSHOT</meepo.version> <!-- https://github.com/trydofor/pro.fessional.meepo -->
        <simpleflatmapper.version>8.2.3</simpleflatmapper.version> <!-- https://github.com/arnaudroger/SimpleFlatMapper/tags -->
        <shardingsphere.version>5.1.1</shardingsphere.version> <!-- https://github.com/apache/shardingsphere/releases -->
        <kaptcha.version>2.3.3</kaptcha.version> <!-- https://github.com/trydofor/kaptcha -->
        <springdoc.version>1.6.7</springdoc.version> <!-- https://github.com/springdoc/springdoc-openapi/releases -->
        <fastjson2.version>2.0.10</fastjson2.version> <!-- https://github.com/alibaba/fastjson2/releases -->
        <fastjson.version>1.2.83</fastjson.version> <!-- https://github.com/alibaba/fastjson/releases -->
        <kryo.version>5.3.0</kryo.version> <!-- https://github.com/EsotericSoftware/kryo/releases -->
        <transmittable.version>2.12.6</transmittable.version> <!-- https://github.com/alibaba/transmittable-thread-local/releases -->
        <bouncycastle.version>1.71</bouncycastle.version> <!-- https://bouncycastle.org/releasenotes.html -->
        <justauth.version>1.16.5</justauth.version> <!-- https://github.com/justauth/JustAuth/releases -->
        <!-- others -->
        <boot-admin.version>2.6.6</boot-admin.version> <!-- https://github.com/codecentric/spring-boot-admin/releases -->
        <sentry.version>5.7.3</sentry.version> <!-- https://github.com/getsentry/sentry-java/releases -->
        <xxljob.version>2.3.0</xxljob.version> <!-- https://github.com/xuxueli/xxl-job/releases -->
        <!-- override spring boot default -->
        <okhttp3.version>4.9.3</okhttp3.version> <!-- just auth need 4, spring use 3 https://square.github.io/okhttp/changelog/ -->
        <!-- mvn-build-plugin -->
        <flatten-maven-plugin.version>1.2.7</flatten-maven-plugin.version> <!-- https://search.maven.org/search?q=flatten-maven-plugin -->
        <maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version> <!-- https://search.maven.org/search?q=maven-gpg-plugin -->
        <wings.java-opens>
            --illegal-access=debug
            --add-modules=java.se <!-- Hazelcast -->
            --add-opens=java.base/java.io=ALL-UNNAMED <!-- FastJson -->
            --add-opens=java.base/java.nio=ALL-UNNAMED <!-- Hazelcast -->
            --add-opens=java.base/java.lang=ALL-UNNAMED <!-- Hazelcast -->
            --add-opens=java.base/java.lang.invoke=ALL-UNNAMED <!-- FastJson2 -->
            --add-opens=java.base/java.util=ALL-UNNAMED <!-- Boot Collections$EmptySet -->
            --add-opens=java.base/sun.nio.ch=ALL-UNNAMED <!-- Hazelcast -->
            --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED <!-- Hazelcast -->
            --add-opens=java.base/sun.security.x509=ALL-UNNAMED <!-- Boot -->
            --add-opens=java.management/sun.management=ALL-UNNAMED <!-- Hazelcast -->
            --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED <!-- Hazelcast -->
            --add-opens=jdk.unsupported/sun.misc=ALL-UNNAMED <!-- Boot -->
            --add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED <!-- Boot -->
            --add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED <!-- Boot -->
        </wings.java-opens>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- pro.fessional -->
            <dependency>
                <groupId>pro.fessional</groupId>
                <artifactId>meepo</artifactId>
                <version>${meepo.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional</groupId>
                <artifactId>mirana</artifactId>
                <version>${mirana.version}</version>
            </dependency>
            <!-- pro.fessional.wings -->
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>silencer</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>silencer-test</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>faceless</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>faceless-flywave</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>faceless-jooq</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>faceless-shard</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>faceless-test</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>slardar</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>slardar-hazelcast</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>slardar-test</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>warlock</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional.wings</groupId>
                <artifactId>warlock-bond</artifactId>
                <version>${wings.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <!-- springboot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
                <!-- 测试上看 undertow 新能最好 -->
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- sharding sphere -->
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>shardingsphere-jdbc-core-spring-boot-starter</artifactId>
                <version>${shardingsphere.version}</version>
            </dependency>
            <!-- mapper converter -->
            <dependency>
                <groupId>org.simpleflatmapper</groupId>
                <artifactId>sfm-jdbc</artifactId>
                <version>${simpleflatmapper.version}</version>
            </dependency>
            <dependency>
                <groupId>org.simpleflatmapper</groupId>
                <artifactId>sfm-springjdbc</artifactId>
                <version>${simpleflatmapper.version}</version>
            </dependency>
            <dependency>
                <groupId>org.simpleflatmapper</groupId>
                <artifactId>sfm-jooq</artifactId>
                <version>${simpleflatmapper.version}</version>
            </dependency>
            <dependency>
                <groupId>org.simpleflatmapper</groupId>
                <artifactId>sfm-querydsl</artifactId>
                <version>${simpleflatmapper.version}</version>
            </dependency>
            <!-- session cache -->
            <!-- spring-session-bom
            <dependency>
                <groupId>org.springframework.session</groupId>
                <artifactId>spring-session-hazelcast</artifactId>
            </dependency>
            -->
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-spring</artifactId>
                <version>${hazelcast.version}</version>
            </dependency>
            <!-- utils -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>pro.fessional</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson2.version}</version>
            </dependency>
            <dependency>
                <!-- wings内禁用，为间接引用的第三方定义安全的版本号 -->
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>${kryo.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId>
                <version>${transmittable.version}</version>
            </dependency>
            <dependency>
                <groupId>me.zhyd.oauth</groupId>
                <artifactId>JustAuth</artifactId>
                <version>${justauth.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxljob.version}</version>
            </dependency>
            <!-- Argon2PasswordEncoder -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <!-- ops -->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>io.sentry</groupId>
                <artifactId>sentry-spring-boot-starter</artifactId>
                <version>${sentry.version}</version>
            </dependency>
            <dependency>
                <groupId>io.sentry</groupId>
                <artifactId>sentry-logback</artifactId>
                <version>${sentry.version}</version>
            </dependency>
            <!-- dev -->
            <dependency>
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>${annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>${errorprone.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <!-- 未曾使用，但因安全漏洞，避免误用，显示移除 -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-logging</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-to-slf4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <argLine>${wings.java-opens}</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <configuration>
                        <!-- avoid /build/resources/resource/filtering=true -->
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>so</nonFilteredFileExtension>
                            <nonFilteredFileExtension>dll</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>zip</nonFilteredFileExtension>
                            <nonFilteredFileExtension>jar</nonFilteredFileExtension>
                            <nonFilteredFileExtension>icon</nonFilteredFileExtension>
                            <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>gif</nonFilteredFileExtension>
                            <nonFilteredFileExtension>png</nonFilteredFileExtension>
                            <nonFilteredFileExtension>wav</nonFilteredFileExtension>
                            <nonFilteredFileExtension>mp3</nonFilteredFileExtension>
                            <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>xls</nonFilteredFileExtension>
                            <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
                            <nonFilteredFileExtension>doc</nonFilteredFileExtension>
                            <nonFilteredFileExtension>docx</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <compilerArgs>
                            <arg>--add-modules=java.se</arg> <!-- Hazelcast -->
                            <arg>--add-exports=java.base/java.io=ALL-UNNAMED</arg> <!-- FastJson -->
                            <arg>--add-exports=java.base/java.nio=ALL-UNNAMED</arg> <!-- Hazelcast -->
                            <arg>--add-exports=java.base/java.lang=ALL-UNNAMED</arg> <!-- Hazelcast -->
                            <arg>--add-exports=java.base/java.lang.invoke=ALL-UNNAMED</arg> <!-- FastJson2 -->
                            <arg>--add-exports=java.base/sun.nio.ch=ALL-UNNAMED</arg> <!-- Hazelcast -->
                            <arg>--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED</arg> <!-- Hazelcast -->
                            <arg>--add-exports=java.base/sun.security.x509=ALL-UNNAMED</arg> <!-- Boot -->
                            <arg>--add-exports=java.management/sun.management=ALL-UNNAMED</arg> <!-- Hazelcast -->
                            <arg>--add-exports=jdk.management/com.sun.management.internal=ALL-UNNAMED</arg> <!-- Hazelcast -->
                            <arg>--add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED</arg> <!-- Boot -->
                            <arg>--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg> <!-- Boot -->
                            <arg>--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg> <!-- Boot -->
                        </compilerArgs>
                        <annotationProcessorPaths>
                            <!--  从以下 path 查找annotationProcessor，class paths -->
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-configuration-processor</artifactId>
                                <version>${spring-boot.version}</version>
                            </path>
                            <path>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-autoconfigure-processor</artifactId>
                                <version>${spring-boot.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <skip>${spring-boot.repackage.skip}</skip>
                        <executable>${spring-boot.repackage.executable}</executable>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--  deploy  -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven-gpg-plugin.version}</version>
                    <configuration>
                        <skip>${deploy.private.repository}</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                            <configuration>
                                <keyname>541B1728468267BFA83FE092CE8F6F63A835DB68</keyname>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.basedir}/src/main/kotlin</source>
                                    <source>${project.basedir}/src/main/java</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <!-- https://www.mojohaus.org/flatten-maven-plugin/flatten-mojo.html -->
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${flatten-maven-plugin.version}</version>
                    <configuration>
                        <updatePomFile>true</updatePomFile>
                        <flattenMode>resolveCiFriendliesOnly</flattenMode>
                        <flattenedPomFilename>.pom.xml</flattenedPomFilename>
                    </configuration>
                    <executions>
                        <execution>
                            <id>flatten</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>flatten.clean</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- kotlin -->
                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                    <configuration>
                        <jvmTarget>${java.version}</jvmTarget>
                        <javaParameters>true</javaParameters>
                    </configuration>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                    <sourceDir>${project.basedir}/src/main/java</sourceDir>
                                </sourceDirs>
                                <args>
                                    <arg>-Xjsr305=strict</arg>
                                </args>
                                <compilerPlugins>
                                    <plugin>spring</plugin>
                                </compilerPlugins>
                            </configuration>
                        </execution>
                        <execution>
                            <id>test-compile</id>
                            <goals>
                                <goal>test-compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                    <sourceDir>${project.basedir}/src/test/java</sourceDir>
                                </sourceDirs>
                                <compilerPlugins>
                                    <plugin>spring</plugin>
                                </compilerPlugins>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-allopen</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- build info -->
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>${git-commit-id-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>get-the-git-infos</id>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                            <phase>initialize</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <verbose>true</verbose>
                        <offline>true</offline>
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                        <includeOnlyProperties>
                            <includeOnlyProperty>git.branch</includeOnlyProperty>
                            <includeOnlyProperty>git.build.(host|time|version|user.name|number.*)</includeOnlyProperty>
                            <includeOnlyProperty>git.closest.*</includeOnlyProperty>
                            <includeOnlyProperty>git.commit.(time|user.name|id.abbrev|id.full|message.full)</includeOnlyProperty>
                            <includeOnlyProperty>git.dirty</includeOnlyProperty>
                            <includeOnlyProperty>git.local.*</includeOnlyProperty>
                            <includeOnlyProperty>git.tags</includeOnlyProperty>
                        </includeOnlyProperties>
                        <commitIdGenerationMode>full</commitIdGenerationMode>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>
</project>
